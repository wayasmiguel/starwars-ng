{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/films/films.component.html","./src/app/components/my-starships/my-starship-edit/my-starship-edit.component.html","./src/app/components/my-starships/my-starship-info/my-starship-info.component.html","./src/app/components/my-starships/my-starships.component.html","./src/app/components/starships/starship-edit/starship-edit.component.html","./src/app/components/starships/starship-info/starship-info.component.html","./src/app/components/starships/starships-list/starships-list.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/films/films.component.scss","./src/app/components/films/films.component.ts","./src/app/components/my-starships/my-starship-edit/my-starship-edit.component.scss","./src/app/components/my-starships/my-starship-edit/my-starship-edit.component.ts","./src/app/components/my-starships/my-starship-info/my-starship-info.component.scss","./src/app/components/my-starships/my-starship-info/my-starship-info.component.ts","./src/app/components/my-starships/my-starships.component.scss","./src/app/components/my-starships/my-starships.component.ts","./src/app/components/starships/starship-edit/starship-edit.component.scss","./src/app/components/starships/starship-edit/starship-edit.component.ts","./src/app/components/starships/starship-info/starship-info.component.scss","./src/app/components/starships/starship-info/starship-info.component.ts","./src/app/components/starships/starships-list/starships-list.component.scss","./src/app/components/starships/starships-list/starships-list.component.ts","./src/app/services/mongoapi.service.ts","./src/app/services/swapi.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<ngx-spinner\\r\\nbdOpacity = 0.9\\r\\nbdColor = \\\"#ffffff\\\"\\r\\nsize = \\\"default\\\"\\r\\ncolor = \\\"#000000\\\"\\r\\ntype = \\\"ball-8bits\\\"\\r\\n[fullScreen] = \\\"true\\\">\\r\\n<p> Cargando... </p>\\r\\n</ngx-spinner>\\r\\n\\r\\n<div class=\\\"container p-3\\\">\\r\\n\\r\\n  <div class=\\\"mb-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col col-12 col-sm-12 col-md-12 col-lg-3\\\">\\r\\n        <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Star_Wars_Logo.svg/1200px-Star_Wars_Logo.svg.png\\\" class=\\\"img-fluid\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col col-12 col-sm-12 col-md-12 col-lg-9 mt-4\\\">\\r\\n        <h1 class=\\\"text-center\\\">Starwars API</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <nav aria-label=\\\"breadcrumb\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li class=\\\"breadcrumb-item\\\">Inicio</li>\\r\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\" *ngIf=\\\"router.url != '/my-starships'\\\">Películas</li>\\r\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\" *ngIf=\\\"router.url === '/my-starships'\\\">Mis naves</li>\\r\\n    </ol>\\r\\n  </nav>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col col-12 col-sm-12 col-md-12 col-lg-3\\\">\\r\\n      <ul class=\\\"list-group mb-4\\\">\\r\\n        <a [routerLink] = \\\"['/']\\\" class=\\\"list-group-item list-group-item-action\\\">Películas</a>\\r\\n        <a [routerLink] = \\\"['/my-starships']\\\" class=\\\"list-group-item list-group-item-action\\\">Mis naves</a>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col col-12 col-sm-12 col-md-12 col-lg-9\\\">\\r\\n      <router-outlet class=\\\"mb-4\\\"></router-outlet>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h5>Lista de películas</h5>\\r\\n\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-sm table-striped table-bordered table-hover\\\">\\r\\n    <thead class=\\\"text-center\\\">\\r\\n      <tr>\\r\\n        <th>Episodio</th>\\r\\n        <th>Título</th>\\r\\n        <th>Lanzamiento</th>\\r\\n        <th>Acciones</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let film of films; let i = index;\\\">\\r\\n        <tr>\\r\\n          <td align=\\\"center\\\">{{film.episode_id}}</td>\\r\\n          <td>{{film.title}}</td>\\r\\n          <td align=\\\"center\\\">{{film.release_date}}</td>\\r\\n          <td align=\\\"center\\\">\\r\\n            <a class=\\\"btn btn-outline-primary btn-sm\\\" [routerLink] = \\\"['/film/'+ extractIdURL(i) +'/starships/list']\\\" title=\\\"Ver\\\">\\r\\n              <i class=\\\"fa fa-eye\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  Editar nave\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Información</h5>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <form [formGroup]=\\\"starshipForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Nombre</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.name.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.name.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>nombre</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Modelo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"model\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.model.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.model.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.model.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>modelo</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Tamaño</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.length.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.length.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.length.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>tamaño</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Capacidad de carga</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"cargo_capacity\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.cargo_capacity.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.cargo_capacity.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.cargo_capacity.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>capacidad de carga</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Pasajeros</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"passengers\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.passengers.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.passengers.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.passengers.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>pasajeros</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Velcidad máxima de atmósfera</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"max_atmosphering_speed\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.max_atmosphering_speed.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.max_atmosphering_speed.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.max_atmosphering_speed.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>velocidad máxima de atmósfera</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Calificación de hiperimpulsor</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"hyperdrive_rating\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.hyperdrive_rating.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.hyperdrive_rating.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.hyperdrive_rating.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>calificación de hiperimpulsor</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Fabricante</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"manufacturer\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.manufacturer.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.manufacturer.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.manufacturer.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>fabricante</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Clase</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"starship_class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.starship_class.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.starship_class.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.starship_class.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>clase</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Costo en créditos</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"cost_in_credits\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.cost_in_credits.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.cost_in_credits.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.cost_in_credits.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>costo en créditos</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <button class=\\\"btn btn-success btn-sm float-right\\\" title=\\\"Guardar\\\" [disabled]=\\\"clicked\\\">\\n        <i class=\\\"fa fa-save\\\"></i> Guardar\\n      </button>\\n\\n    </form>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  Nave seleccionada: <strong>{{starship.name}}</strong>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Especificaciones\\n    <button class=\\\"btn btn-danger btn-sm float-right\\\" (click)=\\\"deleteSS(starship._id)\\\" title=\\\"Eliminar\\\">\\n      <i class=\\\"fa fa-trash\\\"></i> Eliminar\\n    </button>\\n\\n    <a class=\\\"btn btn-warning btn-sm float-right mr-2\\\" [routerLink] = \\\"['/my-starships/edit/', starship._id]\\\" title=\\\"Editar\\\">\\n      <i class=\\\"fa fa-pencil\\\"></i> Editar\\n    </a>\\n  </h5>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <h5 class=\\\"card-title\\\">Modelo</h5>\\n    <p class=\\\"card-text\\\">{{starship.model}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Tamaño</h5>\\n    <p class=\\\"card-text\\\">{{starship.length}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Capacidad de carga</h5>\\n    <p class=\\\"card-text\\\">{{starship.cargo_capacity}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Pasajeros</h5>\\n    <p class=\\\"card-text\\\">{{starship.passengers}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Velcidad máxima de atmósfera</h5>\\n    <p class=\\\"card-text\\\">{{starship.max_atmosphering_speed}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Calificación de hiperimpulsor</h5>\\n    <p class=\\\"card-text\\\">{{starship.hyperdrive_rating}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Fabricante</h5>\\n    <p class=\\\"card-text\\\">{{starship.manufacturer}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Clase</h5>\\n    <p class=\\\"card-text\\\">{{starship.starship_class}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Costo en créditos</h5>\\n    <p class=\\\"card-text\\\">{{starship.cost_in_credits}}</p>\\n\\n  </div>\\n</div>\\n\"","export default \"<h5>Mi lista de naves</h5>\\n\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-sm table-striped table-bordered table-hover\\\">\\n    <thead class=\\\"text-center\\\">\\n      <tr>\\n        <th>Nombre</th>\\n        <th>Modelo</th>\\n        <th>Acciones</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <ng-container *ngFor=\\\"let starship of starships; let i = index;\\\">\\n        <tr>\\n          <td>{{starship.name}}</td>\\n          <td>{{starship.model}}</td>\\n          <td align=\\\"center\\\">\\n            <a class=\\\"btn btn-outline-primary btn-sm\\\" [routerLink] = \\\"['/my-starships/info/', starship._id]\\\" title=\\\"Ver\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n</div>\\n\"","export default \"<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  Editar nave\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Información</h5>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <form [formGroup]=\\\"starshipForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Nombre</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.name.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.name.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>nombre</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Modelo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"model\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.model.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.model.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.model.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>modelo</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Tamaño</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.length.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.length.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.length.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>tamaño</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Capacidad de carga</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"cargo_capacity\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.cargo_capacity.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.cargo_capacity.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.cargo_capacity.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>capacidad de carga</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Pasajeros</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"passengers\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.passengers.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.passengers.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.passengers.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>pasajeros</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Velcidad máxima de atmósfera</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"max_atmosphering_speed\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.max_atmosphering_speed.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.max_atmosphering_speed.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.max_atmosphering_speed.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>velocidad máxima de atmósfera</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Calificación de hiperimpulsor</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"hyperdrive_rating\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.hyperdrive_rating.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.hyperdrive_rating.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.hyperdrive_rating.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>calificación de hiperimpulsor</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Fabricante</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"manufacturer\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.manufacturer.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.manufacturer.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.manufacturer.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>fabricante</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Clase</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"starship_class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.starship_class.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.starship_class.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.starship_class.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>clase</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"font-weight-bold\\\">Costo en créditos</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"cost_in_credits\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.cost_in_credits.errors }\\\">\\n        <div *ngIf=\\\"submitted && starshipForm.controls.cost_in_credits.errors\\\">\\n            <small *ngIf=\\\"starshipForm.controls.cost_in_credits.errors.required\\\" class=\\\"form-text text-danger\\\">El campo <strong>costo en créditos</strong> es requerido.</small>\\n        </div>\\n      </div>\\n\\n      <button class=\\\"btn btn-success btn-sm float-right\\\" title=\\\"Guardar\\\" [disabled]=\\\"clicked\\\">\\n        <i class=\\\"fa fa-save\\\"></i> Guardar\\n      </button>\\n\\n    </form>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  Nave seleccionada: <strong>{{starship.name}}</strong>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Especificaciones\\n    <a class=\\\"btn btn-warning btn-sm float-right\\\" [routerLink] = \\\"['/film/starships/edit/', starship.id]\\\" title=\\\"Editar\\\">\\n      <i class=\\\"fa fa-pencil\\\"></i> Editar\\n    </a>\\n  </h5>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <h5 class=\\\"card-title\\\">Modelo</h5>\\n    <p class=\\\"card-text\\\">{{starship.model}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Tamaño</h5>\\n    <p class=\\\"card-text\\\">{{starship.length}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Capacidad de carga</h5>\\n    <p class=\\\"card-text\\\">{{starship.cargo_capacity}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Pasajeros</h5>\\n    <p class=\\\"card-text\\\">{{starship.passengers}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Velcidad máxima de atmósfera</h5>\\n    <p class=\\\"card-text\\\">{{starship.max_atmosphering_speed}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Calificación de hiperimpulsor</h5>\\n    <p class=\\\"card-text\\\">{{starship.hyperdrive_rating}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Fabricante</h5>\\n    <p class=\\\"card-text\\\">{{starship.manufacturer}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Clase</h5>\\n    <p class=\\\"card-text\\\">{{starship.starship_class}}</p>\\n\\n    <h5 class=\\\"card-title\\\">Costo en créditos</h5>\\n    <p class=\\\"card-text\\\">{{starship.cost_in_credits}}</p>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n  Película seleccionada: <strong>{{film.title + ', ' + film.release_date}}</strong>\\n</div>\\n\\n<h5>Lista de naves</h5>\\n\\n<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-sm table-striped table-bordered table-hover\\\">\\n    <thead class=\\\"text-center\\\">\\n      <tr>\\n        <th>Nombre</th>\\n        <th>Modelo</th>\\n        <th>Acciones</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <ng-container *ngFor=\\\"let starship of starships; let i = index;\\\">\\n        <tr>\\n          <td>{{starship.name}}</td>\\n          <td>{{starship.model}}</td>\\n          <td align=\\\"center\\\">\\n            <a class=\\\"btn btn-outline-primary btn-sm\\\" [routerLink] = \\\"['/film/starships/info/',starship.id]\\\" title=\\\"Ver\\\">\\n              <i class=\\\"fa fa-eye\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'starwars-ng';\n\n  constructor(\n    public router: Router\n  ){}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { routing, appRoutingProviders } from './app.routing';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FilmsComponent } from './components/films/films.component';\nimport { StarshipsListComponent } from './components/starships/starships-list/starships-list.component';\nimport { StarshipInfoComponent } from './components/starships/starship-info/starship-info.component';\nimport { StarshipEditComponent } from './components/starships/starship-edit/starship-edit.component';\nimport { MyStarshipsComponent } from './components/my-starships/my-starships.component';\nimport { MyStarshipInfoComponent } from './components/my-starships/my-starship-info/my-starship-info.component';\nimport { MyStarshipEditComponent } from './components/my-starships/my-starship-edit/my-starship-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilmsComponent,\n    StarshipsListComponent,\n    StarshipInfoComponent,\n    StarshipEditComponent,\n    MyStarshipsComponent,\n    MyStarshipInfoComponent,\n    MyStarshipEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    routing,\n    NgxSpinnerModule,\n    BrowserAnimationsModule\n  ],\n  providers: [appRoutingProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FilmsComponent } from './components/films/films.component';\r\nimport { StarshipsListComponent } from './components/starships/starships-list/starships-list.component';\r\nimport { StarshipInfoComponent } from './components/starships/starship-info/starship-info.component';\r\nimport { StarshipEditComponent } from './components/starships/starship-edit/starship-edit.component';\r\nimport { MyStarshipsComponent } from './components/my-starships/my-starships.component';\r\nimport { MyStarshipInfoComponent } from './components/my-starships/my-starship-info/my-starship-info.component';\r\nimport { MyStarshipEditComponent } from './components/my-starships/my-starship-edit/my-starship-edit.component';\r\n\r\nconst appRoutes : Routes =  [\r\n  {\r\n    path: '', component: FilmsComponent\r\n  },\r\n  {\r\n    path: 'film/starships', component: StarshipsListComponent\r\n  },\r\n  {\r\n    path: 'film/:id/starships/list', component: StarshipsListComponent\r\n  },\r\n  {\r\n    path: 'film/starships/info/:id', component: StarshipInfoComponent\r\n  },\r\n  {\r\n    path: 'film/starships/edit/:id', component: StarshipEditComponent\r\n  },\r\n  {\r\n    path: 'my-starships', component: MyStarshipsComponent\r\n  },\r\n  {\r\n    path: 'my-starships/info/:id', component: MyStarshipInfoComponent\r\n  },\r\n  {\r\n    path: 'my-starships/edit/:id', component: MyStarshipEditComponent\r\n  }\r\n];\r\n\r\nexport const appRoutingProviders : any[] = [];\r\nexport const routing : ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZmlsbXMvZmlsbXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SwapiService } from '../../services/swapi.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.scss'],\n  providers: [SwapiService]\n})\nexport class FilmsComponent implements OnInit {\n\n  films = <any>[];\n\n  constructor(\n    private swapiService: SwapiService,\n    private spinner: NgxSpinnerService\n  ){}\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    this.swapiService.getFilms().subscribe(\n\n      response => {\n        //console.log(response.results);\n        this.films = response.results.sort(this.dynamicSort('episode_id'));\n\n        this.spinner.hide();\n      },\n      error => {\n        this.spinner.hide();\n\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Swapi!',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n\n    );\n\n  }\n\n  dynamicSort(property) {\n     return function(a, b) {\n         return (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n     }\n  }\n\n  extractIdURL(index){\n    return this.films[index].url.split('/')[5];\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXktc3RhcnNoaXBzL215LXN0YXJzaGlwLWVkaXQvbXktc3RhcnNoaXAtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MongoapiService } from '../../../services/mongoapi.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-my-starship-edit',\n  templateUrl: './my-starship-edit.component.html',\n  styleUrls: ['./my-starship-edit.component.scss'],\n  providers: [MongoapiService]\n})\nexport class MyStarshipEditComponent implements OnInit {\n\n  starshipForm: FormGroup;\n  submitted = false;\n  clicked = false;\n\n  constructor(\n    private mongoapiService: MongoapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private spinner: NgxSpinnerService\n  ){}\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    this.starshipForm = this.formBuilder.group({\n        id: ['', ''],\n        name: ['', Validators.required],\n        model: ['', Validators.required],\n        length: ['', Validators.required],\n        cargo_capacity: ['', Validators.required],\n        passengers: ['', Validators.required],\n        max_atmosphering_speed: ['', Validators.required],\n        hyperdrive_rating: ['', Validators.required],\n        manufacturer: ['', Validators.required],\n        starship_class: ['', Validators.required],\n        cost_in_credits: ['', Validators.required],\n    });\n\n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n\n    this.mongoapiService.showStarship(id).subscribe(\n      response => {\n        this.starshipForm.controls.id.setValue(response.starship._id);\n        this.starshipForm.controls.name.setValue(response.starship.name);\n        this.starshipForm.controls.model.setValue(response.starship.model);\n        this.starshipForm.controls.length.setValue(response.starship.length);\n        this.starshipForm.controls.cargo_capacity.setValue(response.starship.cargo_capacity);\n        this.starshipForm.controls.passengers.setValue(response.starship.passengers);\n        this.starshipForm.controls.max_atmosphering_speed.setValue(response.starship.max_atmosphering_speed);\n        this.starshipForm.controls.hyperdrive_rating.setValue(response.starship.hyperdrive_rating);\n        this.starshipForm.controls.manufacturer.setValue(response.starship.manufacturer);\n        this.starshipForm.controls.starship_class.setValue(response.starship.starship_class);\n        this.starshipForm.controls.cost_in_credits.setValue(response.starship.cost_in_credits);\n\n        this.spinner.hide();\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Mongoapi!',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n  get f() { return this.starshipForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n      this.clicked = true;\n      // stop the process here if form is invalid\n      if (this.starshipForm.invalid) {\n          swal.fire({\n            icon: 'error',\n            title: 'Favor de completar los datos obligatorios!',\n            confirmButtonText: 'Aceptar',\n            allowOutsideClick: false\n          });\n          this.clicked = false;\n          return;\n      }\n      this.updateSS();\n  }\n\n  updateSS(){\n\n    //console.log(this.starshipForm.value);return 0;\n\n    this.mongoapiService.updateStarship(this.starshipForm.value).subscribe(\n      response => {\n        //console.log(response);\n\n        swal.fire({\n          title: response.message,\n          icon: 'success',\n          confirmButtonText: 'Aceptar',\n          allowOutsideClick: false\n        }).then((result) => {\n          if (result.value) {\n              window.history.back();\n              //this.router.navigate(['/']);\n          }\n        });\n\n      },\n      error => {\n       //console.log(error);\n\n       swal.fire({\n         icon: 'error',\n         title: 'Ha ocurrido un error al editar la nave espacial!',\n         confirmButtonText: 'Aceptar',\n         allowOutsideClick: false\n       });\n      }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXktc3RhcnNoaXBzL215LXN0YXJzaGlwLWluZm8vbXktc3RhcnNoaXAtaW5mby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MongoapiService } from '../../../services/mongoapi.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-my-starship-info',\n  templateUrl: './my-starship-info.component.html',\n  styleUrls: ['./my-starship-info.component.scss'],\n  providers: [MongoapiService]\n})\nexport class MyStarshipInfoComponent implements OnInit {\n\n  starship = <any>[];\n\n  constructor(\n    private mongoapiService: MongoapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n\n    this.mongoapiService.showStarship(id).subscribe(\n      response => {\n        //console.log(response);\n\n        this.starship = response.starship;\n\n        this.spinner.hide();\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Mongoapi!',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n  deleteSS(id){\n\n    swal.fire({\n      title: 'Desea eliminar la nave espacial?',\n      text: \"Esta acción no se puede deshacer!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirmar',\n      cancelButtonText: 'Cancelar',\n      allowOutsideClick: false\n    }).then((result) => {\n      if (result.value) {\n\n        this.mongoapiService.destroyStarship(id).subscribe(\n          response => {\n            //console.log(response);\n            swal.fire({\n              title: response.message,\n              icon: 'success',\n              confirmButtonText: 'Aceptar',\n              allowOutsideClick: false\n            }).then((result) => {\n              if (result.value) {\n                  this.router.navigate(['/my-starships']);\n              }\n            });\n\n          },\n          error => {\n            swal.fire({\n              icon: 'error',\n              title: 'Ha ocurrido un error al eliminar la nave espacial!',\n              confirmButtonText: 'Aceptar'\n            });\n          }\n        );\n\n      }\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXktc3RhcnNoaXBzL215LXN0YXJzaGlwcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { MongoapiService } from '../../services/mongoapi.service';\nimport swal from'sweetalert2';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-my-starships',\n  templateUrl: './my-starships.component.html',\n  styleUrls: ['./my-starships.component.scss'],\n  providers: [MongoapiService]\n})\nexport class MyStarshipsComponent implements OnInit {\n\n  starships = <any>[];\n\n  constructor(\n    private mongoapiService: MongoapiService,\n    private spinner: NgxSpinnerService\n  ){}\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    this.mongoapiService.getMyStarships().subscribe(\n      response => {\n        //console.log(response);\n\n        this.spinner.hide();\n\n        if(response.error){\n          swal.fire({\n            icon: 'error',\n            title: response.error,\n            confirmButtonText: 'Aceptar'\n          });\n        }\n        else{\n          this.starships = response.starships;\n        }\n\n      },\n      error => {\n        this.spinner.hide();\n\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Mongo',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhcnNoaXBzL3N0YXJzaGlwLWVkaXQvc3RhcnNoaXAtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SwapiService } from '../../../services/swapi.service';\nimport { MongoapiService } from '../../../services/mongoapi.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-starship-edit',\n  templateUrl: './starship-edit.component.html',\n  styleUrls: ['./starship-edit.component.scss'],\n  providers: [SwapiService, MongoapiService]\n})\nexport class StarshipEditComponent implements OnInit {\n\n  starshipForm: FormGroup;\n  submitted = false;\n  clicked = false;\n\n  constructor(\n    private swapiService: SwapiService,\n    private mongoapiService: MongoapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    this.starshipForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        model: ['', Validators.required],\n        length: ['', Validators.required],\n        cargo_capacity: ['', Validators.required],\n        passengers: ['', Validators.required],\n        max_atmosphering_speed: ['', Validators.required],\n        hyperdrive_rating: ['', Validators.required],\n        manufacturer: ['', Validators.required],\n        starship_class: ['', Validators.required],\n        cost_in_credits: ['', Validators.required],\n    });\n\n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n\n    this.swapiService.getStarshipInfo(id).subscribe(\n      response => {\n        this.starshipForm.controls.name.setValue(response.name);\n        this.starshipForm.controls.model.setValue(response.model);\n        this.starshipForm.controls.length.setValue(response.length);\n        this.starshipForm.controls.cargo_capacity.setValue(response.cargo_capacity);\n        this.starshipForm.controls.passengers.setValue(response.passengers);\n        this.starshipForm.controls.max_atmosphering_speed.setValue(response.max_atmosphering_speed);\n        this.starshipForm.controls.hyperdrive_rating.setValue(response.hyperdrive_rating);\n        this.starshipForm.controls.manufacturer.setValue(response.manufacturer);\n        this.starshipForm.controls.starship_class.setValue(response.starship_class);\n        this.starshipForm.controls.cost_in_credits.setValue(response.cost_in_credits);\n\n        this.spinner.hide();\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Swapi',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n  get f() { return this.starshipForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n      this.clicked = true;\n      // stop the process here if form is invalid\n      if (this.starshipForm.invalid) {\n          swal.fire({\n            icon: 'error',\n            title: 'Favor de completar los datos obligatorios!',\n            confirmButtonText: 'Aceptar',\n            allowOutsideClick: false\n          });\n          this.clicked = false;\n          return;\n      }\n      this.storeSSUpdated();\n  }\n\n  storeSSUpdated(){\n\n    this.mongoapiService.storeStarship(this.starshipForm.value).subscribe(\n      response => {\n        //console.log(response);\n\n        swal.fire({\n          title: response.message,\n          icon: 'success',\n          confirmButtonText: 'Aceptar',\n          allowOutsideClick: false\n        }).then((result) => {\n          if (result.value) {\n              window.history.back();\n              //this.router.navigate(['/']);\n          }\n        });\n\n      },\n      error => {\n       //console.log(error);\n\n       swal.fire({\n         icon: 'error',\n         title: 'Ha ocurrido un error al editar la nave espacial!',\n         confirmButtonText: 'Aceptar',\n         allowOutsideClick: false\n       });\n      }\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhcnNoaXBzL3N0YXJzaGlwLWluZm8vc3RhcnNoaXAtaW5mby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SwapiService } from '../../../services/swapi.service';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-starship-info',\n  templateUrl: './starship-info.component.html',\n  styleUrls: ['./starship-info.component.scss'],\n  providers: [SwapiService]\n})\nexport class StarshipInfoComponent implements OnInit {\n\n  starship = <any>[];\n\n  constructor(\n    private swapiService: SwapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n\n    this.swapiService.getStarshipInfo(id).subscribe(\n      response => {\n        //console.log(response);\n        this.starship = response;\n        this.starship.id = this.extractIdURL();\n\n        this.spinner.hide();\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Swapi',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n  extractIdURL(){\n    return this.starship.url.split('/')[5];\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RhcnNoaXBzL3N0YXJzaGlwcy1saXN0L3N0YXJzaGlwcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SwapiService } from '../../../services/swapi.service';\nimport { Router, ActivatedRoute } from \"@angular/router\"\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport swal from'sweetalert2';\n\n@Component({\n  selector: 'app-starships-list',\n  templateUrl: './starships-list.component.html',\n  styleUrls: ['./starships-list.component.scss'],\n  providers: [SwapiService]\n})\nexport class StarshipsListComponent implements OnInit {\n\n  film = <any>[];\n  starships = <any>[];\n\n  constructor(\n    private swapiService: SwapiService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n\n    this.spinner.show();\n\n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n\n    this.swapiService.getFilmInfo(id).subscribe(\n      response => {\n        //console.log(response);\n        this.film = response;\n        this.getSS();\n\n        this.spinner.hide();\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Swapi',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n  getSS(){\n    for (var i = 0; i < this.film.starships.length; i++) {\n       this.getSSData(this.film.starships[i]);\n    }\n  }\n\n  getSSData(url){\n    //console.log(url.split('/')[5]);\n\n    this.swapiService.getStarshipInfo(url.split('/')[5]).subscribe(\n      response => {\n        this.starships.push({\n          id : response.url.split('/')[5],\n          name : response.name,\n          model : response.model\n        });\n      },\n      error => {\n        swal.fire({\n          icon: 'error',\n          title: 'Ha ocurrido un error al obtener los datos desde Swapi',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MongoapiService{\r\n\r\n  mongoapi = \"http://localhost:3900/api/starships/\";\r\n\r\n  constructor(\r\n    private httpClient : HttpClient\r\n  ){}\r\n\r\n  getMyStarships() : Observable<any>{\r\n\r\n    return this.httpClient.get(this.mongoapi);\r\n\r\n  }\r\n\r\n  storeStarship(starship)  : Observable<any>{\r\n\r\n    return this.httpClient.post(this.mongoapi, starship);\r\n\r\n  }\r\n\r\n  showStarship(id) : Observable<any>{\r\n\r\n    return this.httpClient.get(this.mongoapi + id);\r\n\r\n  }\r\n\r\n\r\n  updateStarship(starship) : Observable<any>{\r\n\r\n    return this.httpClient.put(this.mongoapi + starship.id, starship);\r\n\r\n  }\r\n\r\n  destroyStarship(id) : Observable<any>{\r\n\r\n    return this.httpClient.delete(this.mongoapi + id);\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SwapiService{\r\n\r\n  swapi = \"https://swapi.co/api/\";\r\n\r\n  constructor(\r\n    private httpClient : HttpClient\r\n  ){}\r\n\r\n  getFilms() : Observable<any>{\r\n\r\n    return this.httpClient.get(this.swapi + 'films');\r\n\r\n  }\r\n\r\n  getFilmInfo(id) : Observable<any>{\r\n\r\n    return this.httpClient.get(this.swapi + 'films/' + id);\r\n\r\n  }\r\n\r\n  getStarshipInfo(id) : Observable<any>{\r\n\r\n    return this.httpClient.get(this.swapi + 'starships/' + id);\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}